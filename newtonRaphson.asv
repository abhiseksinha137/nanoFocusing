function [n] = newtonRaphson(em,ed, k0,R)
    epsilon=1e-9;
    i=1;
    n0=1;
    while(i<10000)
        fval=f(n0, em,ed, k0,R);
        
        n=n0- fval./df(n0, em,ed, k0,R, dn);
        df(n0, em,ed, k0,R, dn)
        n0=n;

        error=fval;
        
        if (abs(error)<=epsilon)
            break;
        end
        i=i+1;
    end
    if i==10000
        throw(MException('Max iteration reached', ...
        'Solution not converged not found'));
    end

end

function [ret] = f(n, em,ed, k0,R)
    km=sqrt(n.^2-em);
    kd=sqrt(n.^2-ed);
    
    ret = em/km .* besseli(1, k0*km*R)./besseli(0, k0*km*R) + ...
        ed/kd .* besselk(1, k0*kd*R)./besselk(0, k0*kd*R);

end

function [ret] =df(n, em,ed, k0,R)
    km=sqrt(n.^2-em);
    kd=sqrt(n.^2-ed);
    DkmDn=n/em;
    DkdDn=n/ed;
    
    xm=k0*km*R;
    xd=k0*kd*R;

    ret=em*(besseli(1,xm)/besseli(0,xm)*(-1/km^2)*DkmDn + ...
        1/km * (besseli(0,xm)*Dbesseli(1,xm)- Dbesseli(0,xm)*besseli(1,xm))/)
end